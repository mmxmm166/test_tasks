/*1. Перегрузка конструкторов
При перегрузке конструкторов используйте статические методы-фабрики с именами, описывающими аргументы.
Например, запись

Complex fulcrumPoint = Complex.FromRealNumber(23.0); 
обычно лучше записи
Complex fulcrumPoint = new Complex(23.0);
Рассмотрите возможность принудительного использования таких методов-фабрик; для этого соответствующие конструкторы объявляются приватными.
*/
не понял как это можно использовать

/*
2. Интерфейсы и реализации
Иногда в программах встречается особый случай кодирования: допустим, вы строите абстрактную фабрику для создания геометрических фигур. Такая фабрика представляет собой интерфейс, который реализуется конкретным классом.

Как их назвать? IShapeFactory и ShapeFactory? Авторитетные специалисты рекомендуют давать имена интерфейсам без префиксов.
Да, префикс I для интерфейсов очень распространён в немалом числе классических руководств по стилю кодирования,
однако такой префикс в лучшем случае отвлекает, а в худшем -- даёт лишнюю информацию. 
Зачем сообщать программистам, что они имеют дело с интерфейсом? Им достаточно просто знать, что это ShapeFactory -- фабрика фигур.
Следовательно, при необходимости закодировать хорошим именем интерфейс и реализацию, выберите отдельное хорошее имя для реализации.
Например, имя ShapeFactoryImp или даже уродливое CShapeFactory (префикс C ранее рекомендовался Microsoft как показатель, что имя – это класс),
всё равно лучше явного кодирования в имени информации об интерфейсе.
*/  
не использовал, но запомню на будущее
