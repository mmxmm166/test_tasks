1. Всегда визуально убеждайтесь, что все значения индексов массива не выходят за его границы
2. Остерегайтесь пересечения индексов
При использовании вложенных циклов легко написать CatArray[ j ], имея в виду CatArray[ i ].
Частая ошибка -- копировать код из другого места, забывая изменить имена индексов на новые.

3. Многомерные массивы
При использовании многомерных массивов всегда визуально убеждайтесь, что его индексы следуют в правильном порядке.

4. Проверяйте граничные точки при обработке массивов
Нередко удаётся обнаружить немало ошибок, внимательно проверяя обращения к граничным элементам массивов.

Обязательно проверьте, правильно ли выполняется доступ к самому первому элементу массива (с учётом индексации с нуля или с единицы), не используется ли случайно элемент перед ним. А что с обращением к последнему элементу? Нет ли в коде ошибки потери единицы (очень частый баг)?
И, наконец, проверьте, правильно ли код обращается к элементам в середине массива.

5. Рассмотрите возможность замены массивов на другие структуры данных
Очень именитые в информатике специалисты неоднократно предлагали вообще запретить в языках программирования произвольный доступ к массиву по индексам, заменив его последовательным доступом. Аргументы для этого находятся весьма серьёзные: произвольный доступ к массиву похож в плане плохого стиля на «случайные» операторы goto, разбросанные в коде.
Их применение приводит к неаккуратному и подверженному множеству ошибок коду, в корректности которого сложно быть уверенным. Поэтому вместо массивов предлагается использовать множества, стеки и очереди, доступ к элементам которых выполняется последовательно.

Поэтому, важная рекомендация, непривычная для большинства программистов, будет такая, что всегда предварительно обдумывайте применение последовательных контейнеров вместо массивов (сегодня в стандартных библиотеках популярных языков программирования имеется большое множество разнообразных удобных структур данных), или в крайнем случае рассматривайте массивы как последовательные структуры, избегая работы с ними через произвольную индексацию.
